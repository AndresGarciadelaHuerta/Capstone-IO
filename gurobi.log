
Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:19:36 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:22:24 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:23:32 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:23:56 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:25:08 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:30:52 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:31:13 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:32:29 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:33:28 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:34:33 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:49:03 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:51:40 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:52:08 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:53:43 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:57:19 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:57:27 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:58:01 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 16:59:51 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:00:44 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:01:21 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:02:48 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:04:18 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:07:27 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:07:59 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:10:07 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:10:37 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:11:32 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:11:56 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:14:04 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:15:05 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:26:04 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:27:34 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:39:34 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:53:06 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:53:23 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:55:22 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:55:41 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:56:11 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:57:20 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [3e+00, 5e+00]
Presolve removed 12 rows and 12 columns
Presolve time: 0.02s

Explored 0 nodes (0 simplex iterations) in 0.05 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 17:58:20 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Presolve removed 12 rows and 12 columns
Presolve time: 0.12s

Explored 0 nodes (0 simplex iterations) in 0.22 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:00:52 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Presolve removed 12 rows and 12 columns
Presolve time: 0.02s

Explored 0 nodes (0 simplex iterations) in 0.05 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:06:07 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Presolve removed 12 rows and 12 columns
Presolve time: 0.02s

Explored 0 nodes (0 simplex iterations) in 0.09 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:10:12 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 11.0000000
Presolve removed 12 rows and 6 columns
Presolve time: 0.02s
Presolved: 12 rows, 12 columns, 36 nonzeros
Variable types: 0 continuous, 12 integer (6 binary)

Root relaxation: objective 2.500000e-01, 7 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0    4   11.00000    0.25000  97.7%     -    0s
H    0     0                       8.0000000    0.25000  96.9%     -    0s
     0     0     cutoff    0         8.00000    8.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Implied bound: 3
  Clique: 3
  Flow cover: 1

Explored 1 nodes (9 simplex iterations) in 0.27 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.000000000000e+00, best bound 8.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:11:08 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 11.0000000
Presolve removed 12 rows and 6 columns
Presolve time: 0.10s
Presolved: 12 rows, 12 columns, 36 nonzeros
Variable types: 0 continuous, 12 integer (6 binary)

Root relaxation: objective 2.500000e-01, 7 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0    4   11.00000    0.25000  97.7%     -    0s
H    0     0                       8.0000000    0.25000  96.9%     -    0s
     0     0     cutoff    0         8.00000    8.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Implied bound: 3
  Clique: 3
  Flow cover: 1

Explored 1 nodes (9 simplex iterations) in 0.37 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.000000000000e+00, best bound 8.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:11:33 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 11.0000000
Presolve removed 12 rows and 6 columns
Presolve time: 0.00s
Presolved: 12 rows, 12 columns, 36 nonzeros
Variable types: 0 continuous, 12 integer (6 binary)

Root relaxation: objective 2.500000e-01, 7 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0    4   11.00000    0.25000  97.7%     -    0s
H    0     0                       8.0000000    0.25000  96.9%     -    0s
     0     0     cutoff    0         8.00000    8.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Implied bound: 3
  Clique: 3
  Flow cover: 1

Explored 1 nodes (9 simplex iterations) in 0.01 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.000000000000e+00, best bound 8.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:11:39 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 11.0000000
Presolve removed 12 rows and 6 columns
Presolve time: 0.00s
Presolved: 12 rows, 12 columns, 36 nonzeros
Variable types: 0 continuous, 12 integer (6 binary)

Root relaxation: objective 2.500000e-01, 7 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0    4   11.00000    0.25000  97.7%     -    0s
H    0     0                       8.0000000    0.25000  96.9%     -    0s
     0     0     cutoff    0         8.00000    8.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Implied bound: 3
  Clique: 3
  Flow cover: 1

Explored 1 nodes (9 simplex iterations) in 0.00 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.000000000000e+00, best bound 8.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:13:08 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 11.0000000
Presolve removed 12 rows and 6 columns
Presolve time: 0.01s
Presolved: 12 rows, 12 columns, 36 nonzeros
Variable types: 0 continuous, 12 integer (6 binary)

Root relaxation: objective 2.500000e-01, 7 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0    4   11.00000    0.25000  97.7%     -    0s
H    0     0                       8.0000000    0.25000  96.9%     -    0s
     0     0     cutoff    0         8.00000    8.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Implied bound: 3
  Clique: 3
  Flow cover: 1

Explored 1 nodes (9 simplex iterations) in 0.16 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.000000000000e+00, best bound 8.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:13:22 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 11.0000000
Presolve removed 12 rows and 6 columns
Presolve time: 0.00s
Presolved: 12 rows, 12 columns, 36 nonzeros
Variable types: 0 continuous, 12 integer (6 binary)

Root relaxation: objective 2.500000e-01, 7 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0    4   11.00000    0.25000  97.7%     -    0s
H    0     0                       8.0000000    0.25000  96.9%     -    0s
     0     0     cutoff    0         8.00000    8.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Implied bound: 3
  Clique: 3
  Flow cover: 1

Explored 1 nodes (9 simplex iterations) in 0.01 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.000000000000e+00, best bound 8.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Oct  5 18:14:48 2018

Academic license - for non-commercial use only
Optimize a model with 24 rows, 18 columns and 51 nonzeros
Variable types: 0 continuous, 18 integer (9 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e+00, 5e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 11.0000000
Presolve removed 12 rows and 6 columns
Presolve time: 0.05s
Presolved: 12 rows, 12 columns, 36 nonzeros
Variable types: 0 continuous, 12 integer (6 binary)

Root relaxation: objective 2.500000e-01, 7 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0    4   11.00000    0.25000  97.7%     -    0s
H    0     0                       8.0000000    0.25000  96.9%     -    0s
     0     0     cutoff    0         8.00000    8.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Implied bound: 3
  Clique: 3
  Flow cover: 1

Explored 1 nodes (9 simplex iterations) in 0.10 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 8 11 

Optimal solution found (tolerance 1.00e-04)
Best objective 8.000000000000e+00, best bound 8.000000000000e+00, gap 0.0000%
